@page "/TvShows"
@inject HttpClient Http

@using System.Runtime.Serialization


<h1>Search a movie</h1>

@if (data == null)
{
    <p><en>Loading data...</en></p>
}
else
{
    <div>
        <label for="show">Showw</label>
        <input id="show" @bind="show">
        <p></p>
    </div>
    <div>
        <button @onclick="Lookup">Lookup</button>
    </div>
    <br />

    @if (found)
    {
<div>
    <div class="image py-2">
        <div class="card-group">
            <div>
                <img class="poster lazyload lazyloaded" src="https://image.tmdb.org/t/p/w300_and_h450_bestv2/@data.results[0].poster_path" alt="tv poster">
            </div>
            <div class="card px-2">
                <h5 class="card-title">Tv Show: @data.results[0].name</h5>
                Details: @data.results[0].overview
                <br><br>
                Release Date: @data.results[0].first_air_date
            </div>
        </div>
    </div>

</div>
    }
}
@errormessage


@code{
    private String show = "breaking bad";
    private bool found;

    private Root data;
    private String errormessage;

    private async Task GetShowAsync()
    {
        try
        {
            string uri = "https://api.themoviedb.org/3/search/tv?api_key=ca42a258b7f32fa28593ca9289a55adb&query=" + show;
            data = await Http.GetFromJsonAsync<Root>(uri);
            found = true;
            errormessage = String.Empty;

        }
        catch (Exception e)
        {
            found = false;
            errormessage = e.Message;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetShowAsync();
    }

    //lookup
    public async void Lookup()
    {
        await GetShowAsync();
        StateHasChanged();
    }

    public class Result
    {
        public string backdrop_path { get; set; }
        public string first_air_date { get; set; }
        public List<int> genre_ids { get; set; }
        public int id { get; set; }
        public string name { get; set; }
        public List<string> origin_country { get; set; }
        public string original_language { get; set; }
        public string original_name { get; set; }
        public string overview { get; set; }
        public double popularity { get; set; }
        public string poster_path { get; set; }
        public double vote_average { get; set; }
        public int vote_count { get; set; }
    }

    public class Root
    {
        public int page { get; set; }
        public List<Result> results { get; set; }
        public int total_pages { get; set; }
        public int total_results { get; set; }
    }


}
